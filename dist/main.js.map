{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./index.js"],"sourcesContent":["\"use strict\";\r\nconst selectors = {\r\n    boardContainer: document.querySelector('.board-container'),\r\n    board: document.querySelector('.board'),\r\n    moves: document.querySelector('.moves'),\r\n    timer: document.querySelector('.timer'),\r\n    start: document.querySelector('button'),\r\n    win: document.querySelector('.win')\r\n};\r\nconst state = {\r\n    gameStarted: false,\r\n    flippedCards: 0,\r\n    totalFlips: 0,\r\n    totalTime: 0,\r\n    loop: 0\r\n};\r\nconst pickRandom = (array, items) => {\r\n    const clonedArray = [...array];\r\n    const randomPicks = [];\r\n    for (let index = 0; index < items; index++) {\r\n        const randomIndex = Math.floor(Math.random() * clonedArray.length);\r\n        randomPicks.push(clonedArray[randomIndex]);\r\n        clonedArray.splice(randomIndex, 1);\r\n    }\r\n    return randomPicks;\r\n};\r\nconst shuffle = (array) => {\r\n    const clonedArray = [...array];\r\n    for (let index = clonedArray.length - 1; index > 0; index--) {\r\n        const randomIndex = Math.floor(Math.random() * (index + 1));\r\n        const original = clonedArray[index];\r\n        clonedArray[index] = clonedArray[randomIndex];\r\n        clonedArray[randomIndex] = original;\r\n    }\r\n    return clonedArray;\r\n};\r\nconst generateGame = () => {\r\n    const dimensions = selectors.board.getAttribute('data-dimension');\r\n    const emojis = ['🍄', '🍇', '🍈', '🍉', '🍊', '🍋', '🍌', '🍍', '🥭', '🍎', '🍏', '🍐', '🍑', '🍒', '🍓', '🥝'];\r\n    const picks = pickRandom(emojis, (dimensions * 4) / 2);\r\n    const items = shuffle([...picks, ...picks]);\r\n    const cards = `\r\n            <div class=\"board\" style=\"grid-template-columns: repeat(${dimensions}, auto)\">\r\n                ${items.map(item => `\r\n                    <div class=\"card\">\r\n                        <div class=\"card-front\"></div>\r\n                        <div class=\"card-back\">${item}</div>\r\n                    </div>\r\n                `).join('')}\r\n           </div>\r\n        `;\r\n    const parser = new DOMParser().parseFromString(cards, 'text/html');\r\n    selectors.board.replaceWith(parser.querySelector('.board'));\r\n};\r\nconst startGame = () => {\r\n    state.gameStarted = true;\r\n    selectors.start.classList.add('disabled');\r\n    state.loop = window.setInterval(() => {\r\n        state.totalTime++;\r\n        selectors.moves.innerText = `${state.totalFlips} moves`;\r\n        selectors.timer.innerText = `time: ${state.totalTime} sec`;\r\n    }, 1000);\r\n};\r\nconst flipBackCards = () => {\r\n    document.querySelectorAll('.card:not(.matched)').forEach(card => {\r\n        card.classList.remove('flipped');\r\n    });\r\n};\r\nconst flipCard = (card) => {\r\n    state.flippedCards++;\r\n    state.totalFlips++;\r\n    if (!state.gameStarted) {\r\n        startGame();\r\n    }\r\n    if (state.flippedCards <= 2) {\r\n        card.classList.add('flipped');\r\n        const flippedCards = document.querySelectorAll('.flipped:not(.matched)');\r\n        if (flippedCards.length === 2) {\r\n            if (flippedCards[0].innerText === flippedCards[1].innerText) {\r\n                flippedCards[0].classList.add('matched');\r\n                flippedCards[1].classList.add('matched');\r\n                setTimeout(() => {\r\n                    flippedCards[0].style.cssText = \"visibility: hidden;\";\r\n                    flippedCards[1].style.cssText = \"visibility: hidden;\";\r\n                }, 1000);\r\n                state.flippedCards = 0;\r\n            }\r\n        }\r\n    }\r\n    if (state.flippedCards === 3) {\r\n        setTimeout(() => {\r\n            flipBackCards();\r\n            card.classList.add('flipped');\r\n            state.flippedCards = 1;\r\n        }, 1000);\r\n    }\r\n    if (!document.querySelectorAll('.card:not(.flipped)').length) {\r\n        setTimeout(() => {\r\n            selectors.boardContainer.classList.add('flipped');\r\n            selectors.win.innerHTML = `\r\n                    <span class=\"win-text\">\r\n                        You won!<br />\r\n                        with <span class=\"highlight\">${state.totalFlips}</span> moves<br />\r\n                        under <span class=\"highlight\">${state.totalTime}</span> seconds\r\n                    </span>\r\n                `;\r\n            clearInterval(state.loop);\r\n        }, 1000);\r\n        selectors.start.setAttribute('style', \"color: red;\");\r\n        selectors.start.addEventListener('click', restart);\r\n    }\r\n};\r\nconst attachEventListeners = () => {\r\n    document.addEventListener('click', (event) => {\r\n        const eventTarget = event.target;\r\n        const eventParent = eventTarget.parentElement;\r\n        if (eventTarget.className.includes('card') && !eventParent.className.includes('flipped')) {\r\n            flipCard(eventParent);\r\n        }\r\n        else if (eventTarget.nodeName === 'BUTTON' && !eventTarget.className.includes('disabled')) {\r\n            startGame();\r\n        }\r\n    });\r\n};\r\nfunction restart() {\r\n    window.location.reload();\r\n}\r\ngenerateGame();\r\nattachEventListeners();\r\n"],"names":["selectors","boardContainer","document","querySelector","board","moves","timer","start","win","state","gameStarted","flippedCards","totalFlips","totalTime","loop","pickRandom","array","items","clonedArray","randomPicks","index","randomIndex","Math","floor","random","length","push","splice","shuffle","original","generateGame","dimensions","getAttribute","emojis","picks","cards","map","item","join","parser","DOMParser","parseFromString","replaceWith","startGame","classList","add","window","setInterval","innerText","flipBackCards","querySelectorAll","forEach","card","remove","flipCard","setTimeout","style","cssText","innerHTML","clearInterval","setAttribute","addEventListener","restart","attachEventListeners","event","eventTarget","target","eventParent","parentElement","className","includes","nodeName","location","reload"],"sourceRoot":""}